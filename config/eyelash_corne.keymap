#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB        &kp Q    &kp W  &kp E      &kp R               &lt 1 T                             &kp UP                &kp Y        &kp U                  &kp I      &kp O    &kp P            &kp BACKSLASH
&kp BACKSPACE  &lt 2 A  &kp S  &kp D      &kp F               &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J                  &kp K      &kp L    &lt 2 SEMICOLON  &kp SQT
&kp TAB        &kp Z    &kp X  &kp C      &kp V               &lt 4 B      &kp SPACE              &kp DOWN              &kp N        &kp M                  &kp COMMA  &kp DOT  &kp FSLH         &kp DELETE
                               &kp MINUS  &mt LEFT_GUI UNDER  &lt 3 ENTER                                               &lt 2 ENTER  &mt RIGHT_SHIFT SPACE  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        number {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none         &none  &kp KP_N7  &kp KP_N8  &kp KP_N9  &none  &none
&none  &none  &none  &none  &none  &none           &none  &none  &none  &none  &kp KP_N4  &kp KP_N5  &kp KP_N6  &none  &none
&none  &none  &none  &none  &none  &none  &none           &none         &none  &kp KP_N1  &kp KP_N2  &kp KP_N3  &none  &none
                     &none  &none  &none                                &none  &none      &none
            >;

            label = "NUMBER";
        };

        symbol {
            bindings = <
&none          &none            &kp LESS_THAN  &kp GREATER_THAN  &kp BACKSLASH  &kp GRAVE                  &none         &kp AMPS   &none      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none         &none
&none          &kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL      &kp POUND           &none  &none  &none  &kp PIPE   &kp COLON  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT   &none
&kp BACKSPACE  &kp AT           &kp SLASH      &kp ASTRK         &kp CARET      &kp SLASH  &none           &none         &kp TILDE  &kp DLLR   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QUESTION  &none
                                               &none             &kp SPACE      &none                                    &none      &none      &none
            >;

            label = "SYMBOL";
        };

        win {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none         &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none           &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none           &none         &none  &none  &none  &none  &none  &none
                     &none  &none  &none                                &none  &none  &none
            >;

            label = "WIN";
        };

        function {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none         &kp F10  &kp F7  &kp F8  &kp F9  &none  &none
&none  &none  &none  &none  &none  &none           &none  &none  &none  &kp F11  &kp F4  &kp F5  &kp F6  &none  &none
&none  &none  &none  &none  &none  &none  &none           &none         &kp F12  &kp F1  &kp F2  &kp F3  &none  &none
                     &none  &none  &none                                &none    &none   &none
            >;

            label = "FN";
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_33 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
