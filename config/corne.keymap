#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        caps_word_mo: caps_word_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "CAPS_WORD_MO";
            bindings = <&mo>, <&caps_word>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        nums_word_mo: nums_word_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "NUMS_WORD_MO";
            bindings = <&mo>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        tp: tp {
            compatible = "zmk,behavior-hold-tap";
            label = "tap_preferred";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
        };

        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <12 13 14 15 16 17 24 25 26 27 28 29 12 13 14 15 16 17 24 25 26 27 28 29 12 13 14 15 16 17 24 25 26 27 28 29 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <36 37 38 6 7 8 9 18 19 20 21 30 31 32 33 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word_hml {
            bindings = <&caps_word>;
            key-positions = <15 14>;
            layers = <0>;
            require-prior-idle-ms = <75>;
        };

        assign {
            bindings = <&kp EQUAL>;
            key-positions = <16 15>;
            layers = <0>;
            require-prior-idle-ms = <75>;
        };

        lt {
            bindings = <&kp LESS_THAN>;
            key-positions = <2 3>;
            layers = <0>;
            require-prior-idle-ms = <75>;
        };

        gt {
            bindings = <&kp GREATER_THAN>;
            key-positions = <3 4>;
            layers = <0>;
            require-prior-idle-ms = <75>;
        };

        l_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 7>;
            layers = <0>;
            require-prior-idle-ms = <75>;
        };

        r_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 8>;
            layers = <0>;
            require-prior-idle-ms = <75>;
        };

        l_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
            layers = <0>;
            require-prior-idle-ms = <75>;
        };

        r_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
            layers = <0>;
            require-prior-idle-ms = <75>;
        };

        l_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <31 32>;
            layers = <0>;
            require-prior-idle-ms = <75>;
        };

        r_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 33>;
            require-prior-idle-ms = <75>;
            layers = <0>;
        };

        windows {
            bindings = <&to 6>;
            key-positions = <2 3 4>;
            layers = <0>;
        };

        mac {
            bindings = <&to 0>;
            key-positions = <2 3 4>;
            layers = <6>;
        };
    };

    macros {
        go_assign: go_assign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(SEMICOLON) &kp EQUAL>;
            label = "GO_ASSIGN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE     &kp Q            &kp W            &kp E              &kp R                    &lt 1 T                       &kp Y        &kp U                 &kp I                   &kp O                  &kp P                 &kp BACKSLASH
&kp TAB        &lt 2 A          &kp S            &kp D              &kp F                    &tp LS(LA(LC(LEFT_GUI))) G    &kp H        &kp J                 &kp K                   &kp L                  &lt 2 SEMICOLON       &kp SQT
&kp BACKSPACE  &HML LEFT_GUI Z  &HML LEFT_ALT X  &HML LEFT_SHIFT C  &HML LCTRL V             &lt 4 B                       &kp N        &HMR RIGHT_CONTROL M  &HMR RIGHT_SHIFT COMMA  &HMR RIGHT_ALT PERIOD  &HMR RIGHT_GUI SLASH  &kp DELETE
                                                 &caps_word_mo 5 0  &mt LEFT_GUI UNDERSCORE  &lt 3 ENTER                   &lt 2 ENTER  &kp SPACE             &nums_word_mo 5 0
            >;
        };

        number {
            display-name = "NUMBER";
            bindings = <
&trans  &none  &none  &none  &none  &none    &none  &kp N7  &kp N8  &kp N9  &kp PLUS    &kp SLASH
&trans  &none  &none  &none  &none  &none    &none  &kp N4  &kp N5  &kp N6  &kp MINUS   &kp ASTERISK
&trans  &none  &none  &none  &none  &none    &none  &kp N1  &kp N2  &kp N3  &kp PERIOD  &kp ENTER
                      &none  &none  &to 1    &to 0  &kp N0  &none
            >;
        };

        symbol {
            display-name = "SYMBOL";
            bindings = <
&trans  &none             &kp LESS_THAN    &kp GREATER_THAN      &kp BACKSLASH     &kp GRAVE    &kp AMPS   &go_assign               &kp LEFT_BRACKET             &kp RIGHT_BRACKET      &none                    &none
&trans  &kp EXCL          &kp MINUS        &kp PLUS              &kp EQUAL         &kp POUND    &kp PIPE   &kp COLON                &kp LEFT_PARENTHESIS         &kp RIGHT_PARENTHESIS  &kp PERCENT              &none
&trans  &HML LEFT_GUI AT  &HML LALT UNDER  &HML LSHIFT ASTERISK  &HML LCTRL CARET  &kp SLASH    &kp TILDE  &HMR RIGHT_CONTROL DLLR  &HMR RIGHT_SHIFT LEFT_BRACE  &HMR RALT RIGHT_BRACE  &HMR RIGHT_GUI QUESTION  &trans
                                           &none                 &trans            &kp SPACE    &trans     &trans                   &none
            >;
        };

        win {
            display-name = "WIN";
            bindings = <
&trans  &kp LS(LC(LG(N3)))  &kp LA(LC(LEFT))  &kp LC(LA(RIGHT))        &kp LC(LG(LS(N4)))  &kp LA(LC(LG(RIGHT)))    &trans    &kp PAGE_UP  &kp HOME    &kp END                  &kp PAGE_DOWN  &none
&trans  &kp LA(LC(D))       &kp LA(LC(F))     &kp LA(LC(T))            &kp LA(LC(G))       &kp LA(LC(ENTER))        &kp LEFT  &kp DOWN     &kp UP      &kp RIGHT                &none          &none
&trans  &HML LCMD C_MUTE    &HML LALT C_PREV  &HML LSHFT C_PLAY_PAUSE  &HML LCTRL C_NEXT   &trans                   &trans    &kp RCTRL    &kp RSHIFT  &HMR LC(RALT) RC(RIGHT)  &kp RCMD       &kp C_SLEEP
                                              &none                    &none               &none                    &none     &none        &none
            >;
        };

        function {
            display-name = "FN";
            bindings = <
&trans  &none  &none  &none  &none  &none    &kp F10  &kp F7  &kp F8  &kp F9  &none  &none
&trans  &none  &none  &none  &none  &none    &kp F11  &kp F4  &kp F5  &kp F6  &none  &none
&trans  &none  &none  &none  &none  &none    &kp F12  &kp F1  &kp F2  &kp F3  &none  &none
                      &none  &none  &none    &none    &none   &none
            >;
        };

        kbd_ctl {
            display-name = "KBD";
            bindings = <
&studio_unlock  &none            &none           &none         &bt BT_CLR    &bt BT_CLR_ALL     &none            &none            &none            &none            &none  &none
&sys_reset      &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &none            &none            &none            &none            &none  &sys_reset
&bootloader     &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &out OUT_USB  &out OUT_BLE  &rgb_ug RGB_EFF    &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &none  &bootloader
                                                 &trans        &none         &none              &none            &none            &trans
            >;
        };

        windows {
            display-name = "WINDOWS";
            bindings = <
&kp ESCAPE     &kp Q            &kp W            &kp E              &kp R                 &lt 1 T                       &kp Y        &kp U                 &kp I                   &kp O             &kp P            &kp BACKSLASH
&kp TAB        &lt 2 A          &kp S            &kp D              &kp F                 &tp LS(LA(LC(LEFT_GUI))) G    &kp H        &kp J                 &kp K                   &kp L             &lt 2 SEMICOLON  &kp SQT
&kp BACKSPACE  &HML LEFT_GUI Z  &HML LEFT_ALT X  &HML LEFT_SHIFT C  &HML LCTRL V          &lt 4 B                       &kp N        &HMR RIGHT_CONTROL M  &HMR RIGHT_SHIFT COMMA  &HMR RALT PERIOD  &HMR RGUI SLASH  &kp DELETE
                                                 &caps_word_mo 5 0  &mt LCTRL UNDERSCORE  &lt 3 ENTER                   &lt 2 ENTER  &kp SPACE             &nums_word_mo 5 0
            >;
        };
    };
};
